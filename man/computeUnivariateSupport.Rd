% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{computeUnivariateSupport}
\alias{computeUnivariateSupport}
\title{Estimate the baseline support}
\usage{
computeUnivariateSupport(Mat, gamma = 0.1, beta = 0.95,
  method = "partial", parallel = TRUE, verbose = TRUE)
}
\arguments{
\item{Mat}{Matrix of data, with each column corresponding to a sample and each 
row corresponding to a feature}

\item{gamma}{Parameter for selecting radius around each support point (0 < gamma < 1).
By default gamma = 0.1.}

\item{beta}{Parameter for eliminating outliers (0 < beta < 1). By default beta=0.95.}

\item{method}{Method of computing distance to j'th nearest neighbour. Options are 
"partial" (default option and usually the fastest) for using partial quicksort, 
"fullsort" for using full quicksort, "kdtree" for using a kd-tree (requires the package nabor), 
"quantile_dist" for computing quantiles over pairwise distances, "ranks" for using the rank function.}

\item{parallel}{Logical indicating whether to compute features parallelly with mclapply (defaults to TRUE).}

\item{verbose}{Logical indicating whether to print status related messages during computation (defaults
to TRUE).}
}
\value{
A list with elements "Ranges" (a data frame containing the baseline interval for each feature),
"Support" (a binary matrix of the same dimensions as Mat indicating whether each sample was a support 
for a feature or not, 1=support, 0=not in the support), and "alpha" (the expected number of divergent 
features per sample estimated over the samples).
}
\description{
Function for computing the basline support for univariate features given gamma
and beta parameters.
}
\examples{
data(divergence)
S = computeUnivariateSupport(computeQuantileMatrix(breastTCGA_Mat[, breastTCGA_Group=="NORMAL"]))

}
\keyword{baseline,}
\keyword{support}
